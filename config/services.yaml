# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    api.query_tag:  !php/const 'App\ApiClient\QueryContainer::TAG'
    api.client_tag: !php/const 'App\ApiClient\Manager::TAG'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # this config only applies to the services created by this file
    _instanceof:
        # services whose classes are instances of CustomInterface will be tagged automatically
        App\ApiClient\Interfaces\QueryInterface:
            tags: ['%api.query_tag%']

        App\ApiClient\Interfaces\ClientInterface:
            tags: ['%api.client_tag%']

    App\ApiClient\QueryContainer:
        arguments: [!tagged '%api.query_tag%']

    App\ApiClient\Manager:
        arguments: [!tagged '%api.client_tag%']
